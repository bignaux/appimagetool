# Copyright (c) 2016 Bignaux Ronan

CC            = gcc
CFLAGS        = -std=gnu99 -Wall -Wno-unused-parameter -Wno-unused-result -Wformat-security -Os -g
STRIP         = strip
MAGIC         = echo "8: 414902" | xxd -r -
MKDIR         = mkdir -p
COPY          = cp -f
COPY_FILE     = $(COPY)
OBJECTS		  = runtime.o notify.o elf.o getsection.o ylog/ylog.o
SIZE		  = stat -c "%s"
LDFLAGS       = -L./squashfuse/.libs/

all: runtime
.PHONY: all embed mrproper

# Prepare 1024 bytes of space for updateinformation
1024_blank_bytes:
	#printf '\0%.0s' {0..1023} > $@
	echo "03FF: 00" | xxd -r > $@
	$(SIZE) $@

# Compile runtime but do not link
runtime.o: runtime.c
	$(CC) -c $(CFLAGS) $^ -DVERSION_NUMBER=\"$(git describe --tags --always --abbrev=7)\" \
	-I./squashfuse/ -D_FILE_OFFSET_BITS=64

# Add .upd_info and .sha256_sig sections
embed: 1024_blank_bytes runtime
	objcopy --add-section .upd_info=1024_blank_bytes \
		--set-section-flags .upd_info=noload,readonly runtime
	objcopy --add-section .sha256_sig=1024_blank_bytes \
		--set-section-flags .sha256_sig=noload,readonly runtime
	$(SIZE) runtime

# Now statically link against libsquashfuse_ll, libsquashfuse and liblzma
# TODO: generate runtime in function of the compressor we choose to avoid embeded unnecessary compression.
runtime: $(OBJECTS)
	$(CC) $(CFLAGS) $(LDFLAGS) $^ \
	-l:libsquashfuse_ll.a -l:libsquashfuse.a -l:libfuseprivate.a \
	-l:liblzma.a -l:liblz4.a -l:libz.a -l:libinotifytools.a \
	-lfuse -lpthread -ldl -o runtime

install: runtime embed
	$(MKDIR) build
	$(COPY_FILE) runtime build
	$(STRIP) build/runtime
	# Insert AppImage magic bytes at offset 8
	# verify with : xxd -ps -s 0x8 -l 3 build/runtime
	$(MAGIC) build/runtime

clean:
	rm -f $(OBJECTS) 1024_blank_bytes

mrproper: clean
	rm -f runtime
